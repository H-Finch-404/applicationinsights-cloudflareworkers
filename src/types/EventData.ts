// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// THIS FILE WAS AUTOGENERATED
import { Domain } from './Domain'
import { DataSanitizer } from '../DataSanitizer'

interface EventDataInterface{
	/**
	 * Event name. Keep it low cardinality to allow proper grouping and useful metrics.
	 */
	name: string;

	/**
	 * Collection of custom properties.
	 */
	properties?: any;

	/**
	 * Collection of custom measurements.
	 */
	measurements?: any;
}

/**
 * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.
 */
export class EventData extends Domain {
	/**
	 * Schema version
	 */
	public ver: number

	/**
	 * Event name. Keep it low cardinality to allow proper grouping and useful metrics.
	 */
	public name: string

	/**
	 * Collection of custom properties.
	 */
	public properties: any

	/**
	 * Collection of custom measurements.
	 */
	public measurements: any

	constructor(options:EventDataInterface) {
		super()

		this.ver = 2
		this.properties = DataSanitizer.sanitizeProperties(options.properties || {})
		this.measurements = DataSanitizer.sanitizeMeasurements(options.measurements || {})

		this.name = DataSanitizer.sanitizeKey(options.name)
	}
}
